{
  "name": "uswds-webcomponents",
  "version": "1.0.1",
  "description": "U.S. Web Design System components as Web Components using Lit Element",
  "type": "module",
  "main": "dist/index.js",
  "module": "dist/index.js",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "./components/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./forms": {
      "import": "./dist/forms/index.js",
      "types": "./dist/forms/index.d.ts"
    },
    "./forms/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./navigation": {
      "import": "./dist/navigation/index.js",
      "types": "./dist/navigation/index.d.ts"
    },
    "./navigation/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./data-display": {
      "import": "./dist/data-display/index.js",
      "types": "./dist/data-display/index.d.ts"
    },
    "./data-display/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./feedback": {
      "import": "./dist/feedback/index.js",
      "types": "./dist/feedback/index.d.ts"
    },
    "./feedback/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./actions": {
      "import": "./dist/actions/index.js",
      "types": "./dist/actions/index.d.ts"
    },
    "./actions/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./layout": {
      "import": "./dist/layout/index.js",
      "types": "./dist/layout/index.d.ts"
    },
    "./layout/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./structure": {
      "import": "./dist/structure/index.js",
      "types": "./dist/structure/index.d.ts"
    },
    "./structure/*": {
      "import": "./dist/components/*.js",
      "types": "./dist/components/*.d.ts"
    },
    "./css/*": "./dist/css/*.css",
    "./styles.css": "./src/styles/styles.css"
  },
  "files": [
    "dist",
    "src",
    "CHANGELOG.md",
    "CONTRIBUTING.md",
    "SECURITY.md"
  ],
  "scripts": {
    "// DEVELOPMENT": "",
    "dev": "vite",
    "preview": "vite preview",
    "storybook": "storybook dev -p 6006",
    "storybook:clean": "rm -rf node_modules/.cache/storybook node_modules/.vite storybook-static && echo '✅ Storybook cache cleared. Run npm run storybook to restart.'",
    "// BUILD & COMPILE": "",
    "build:css": "sass src/styles/styles.scss src/styles/styles.css --source-map --load-path=node_modules/@uswds/uswds/packages --load-path=node_modules && postcss src/styles/styles.css --replace --use autoprefixer",
    "build:css:prod": "sass src/styles/styles.scss src/styles/styles.css --source-map --load-path=node_modules/@uswds/uswds/packages --load-path=node_modules && NODE_ENV=production postcss src/styles/styles.css --replace",
    "build:css:watch": "sass src/styles/styles.scss src/styles/styles.css --source-map --load-path=node_modules/@uswds/uswds/packages --load-path=node_modules --watch",
    "build": "npm run sw:sync && NODE_ENV=production npm run build:css:prod && npm run css:tree-shake && tsc && vite build && npm run docs:update-optimization",
    "build:watch": "npm run build:css:watch & tsc && vite build --watch",
    "build:optimized": "NODE_ENV=production npm run build:css && npm run css:tree-shake && tsc && vite build --config vite.config.optimized.ts",
    "build:production": "npm run build:optimized",
    "build-storybook": "npm run build:css && storybook build",
    "// CSS TREE-SHAKING": "",
    "css:tree-shake": "node scripts/build/extract-component-css.js",
    "css:tree-shake:stats": "node scripts/build/extract-component-css.js --verbose",
    "// SERVICE WORKER": "",
    "sw:sync": "node scripts/build/sync-service-worker-version.js",
    "typecheck": "tsc --noEmit",
    "typecheck:fast": "tsc --noEmit --incremental",
    "validate-syntax": "node scripts/validate-javascript-syntax.js",
    "validate:click-events": "node scripts/validate-click-event-coverage.js",
    "validate:double-init": "node scripts/validate-double-initialization-prevention.js",
    "analyze:testing-gaps": "node scripts/analyze-testing-gaps.js",
    "validate:story-patterns": "vitest run __tests__/story-pattern-validation.test.ts",
    "validate:story-binding": "vitest run __tests__/story-property-binding.test.ts",
    "validate:story-args": "node scripts/validate-storybook-args.cjs",
    "validate:story-args:problems": "node scripts/validate-storybook-args.cjs --problems",
    "validate:attribute-mapping": "node scripts/validate/validate-attribute-mapping.js",
    "validate:story-rendering": "vitest run __tests__/storybook-story-rendering.test.ts",
    "validate:critical:fast": "npm run validate:story-patterns && npm run validate:double-init && npm run validate:uswds-loader && npm run validate:attribute-mapping",
    "// USWDS INTEGRATION VALIDATION": "",
    "validate:uswds-integration": "node scripts/validate-vite-uswds-config.js",
    "validate:uswds-loader": "node scripts/validate-uswds-loader-usage.js",
    "validate:uswds-init-methods": "node scripts/archived/validate-uswds-initialization-methods.cjs",
    "test:uswds-integration": "npm run test -- __tests__/storybook-uswds-integration.test.ts",
    "test:uswds-transformation": "npm run test -- __tests__/uswds-transformation-validation.test.ts",
    "test:storybook-integration": "node scripts/test-storybook-uswds-integration.js",
    "test:cross-environment-functionality": "node scripts/test-cross-environment-functionality.js",
    "validate:storybook-uswds": "npm run validate:uswds-integration && npm run validate:uswds-loader && npm run test:uswds-integration",
    "validate:full": "npm run validate:critical:fast && npm run validate:click-events && npm run validate:slots",
    "// ARCHITECTURE VALIDATION": "",
    "validate:architecture": "node scripts/validate-architecture.js",
    "validate:option-b": "node scripts/validate-option-b-compliance.cjs",
    "validate:no-custom-css": "node scripts/validate/validate-no-custom-css.js",
    "validate:option-b:strict": "node scripts/validate-option-b-compliance.cjs --strict",
    "arch:validate": "npm run validate:architecture",
    "arch:guide": "code docs/USWDS_TRANSFORMATION_PATTERNS.md",
    "arch:rules": "code docs/ARCHITECTURE_VALIDATION_RULES.md",
    "arch:check": "npm run validate:architecture && npm run validate:option-b && echo '✅ Architecture compliance verified'",
    "// TESTING - CONSOLIDATED ORCHESTRATORS": "",
    "test:run": "node scripts/test/run-tests.js",
    "test:run:unit": "node scripts/test/run-tests.js --unit",
    "test:run:browser": "node scripts/test/run-tests.js --browser",
    "test:run:e2e": "node scripts/test/run-tests.js --e2e",
    "test:run:all": "node scripts/test/run-tests.js --all",
    "test:run:component": "node scripts/test/run-tests.js --component=",
    "test:run:flaky": "node scripts/test/run-tests.js --flaky",
    "test:run:smoke": "node scripts/test/run-tests.js --smoke",
    "test:run:contracts": "node scripts/test/run-tests.js --contracts",
    "test:run:performance": "node scripts/test/run-tests.js --performance",
    "test:run:mutation": "node scripts/test/run-tests.js --mutation",
    "// VALIDATION - CONSOLIDATED SYSTEM": "",
    "validate": "node scripts/validate/compliance-checker.js --all",
    "validate:component": "node scripts/validate/compliance-checker.js --component=",
    "validate:uswds": "node scripts/validate/compliance-checker.js --uswds",
    "validate:structure": "node scripts/validate/compliance-checker.js --structure",
    "validate:css": "node scripts/validate/compliance-checker.js --css",
    "validate:javascript": "node scripts/validate/compliance-checker.js --javascript",
    "validate:accessibility": "node scripts/validate/compliance-checker.js --accessibility",
    "validate:architecture-pattern": "node scripts/validate/compliance-checker.js --architecture",
    "validate:storybook-stories": "node scripts/validate/compliance-checker.js --storybook",
    "validate:fix": "node scripts/validate/compliance-checker.js --all --fix",
    "validate:strict": "node scripts/validate/compliance-checker.js --all --strict",
    "validate:report": "node scripts/validate/compliance-checker.js --all --report=json",
    "validate:code-quality": "node scripts/validate/code-quality-review.cjs",
    "validate:ai-quality": "node scripts/validate/ai-code-quality-validator.cjs",
    "validate:refactoring": "node scripts/validate/code-refactoring-analyzer.cjs",
    "validate:icon-names": "node scripts/validate/validate-icon-names.cjs",
    "validate:clean-code": "npm run validate:ai-quality && npm run validate:refactoring",
    "validate:layout-forcing": "node scripts/validate/validate-layout-forcing.js",
    "validate:story-styles": "node scripts/validate/validate-story-styles.js",
    "validate:story-styles:quiet": "node scripts/validate/validate-story-styles.js --quiet",
    "validate:image-links": "node scripts/validate/validate-image-links.js",
    "validate:image-links:strict": "node scripts/validate/validate-image-links.js --strict",
    "validate:image-links:fix": "node scripts/validate/validate-image-links.js --fix",
    "validate:doc-links": "node scripts/validate/validate-documentation-links.cjs",
    "validate:doc-links:strict": "node scripts/validate/validate-documentation-links.cjs --strict",
    "validate:doc-links:external": "node scripts/validate/validate-documentation-links.cjs --external",
    "validate:doc-links:all": "node scripts/validate/validate-documentation-links.cjs --external --strict",
    "validate:no-skipped-tests": "node scripts/validate/validate-no-skipped-tests.cjs",
    "validate:cypress-patterns": "node scripts/validate/validate-cypress-patterns.cjs",
    "// DISCOVERED ISSUES ENFORCEMENT": "",
    "validate:commit-msg": "node scripts/validate/validate-commit-message.cjs",
    "check:discovered-issues": "node scripts/validate/check-discovered-issues.cjs",
    "generate:discovered-issues": "node scripts/validate/generate-discovered-issues.cjs",
    "fix:discovered": "cat .git/DISCOVERED_ISSUES.json 2>/dev/null || echo 'No discovered issues'",
    "// CLEANUP - REPOSITORY ORGANIZATION": "",
    "cleanup:validate": "node scripts/ci/cleanup-validator.cjs",
    "cleanup:auto": "node scripts/maintenance/auto-cleanup.cjs",
    "// GENERATION - COMPONENT GENERATOR": "",
    "generate:component": "node scripts/generate/component-generator.js --name=",
    "generate:component:interactive": "node scripts/generate/component-generator.js --interactive",
    "generate:behavior-contract": "node scripts/generate-behavior-contract.js --component=",
    "// TESTING": "",
    "test": "vitest run",
    "test:verbose": "VITEST_VERBOSE=1 vitest run",
    "test:by-component": "bash scripts/test/test-by-component.sh",
    "test:chunked": "bash scripts/test/test-by-component.sh",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:ci": "vitest run",
    "test:cleanup": "node scripts/cleanup-test-processes.js",
    "test:safe": "npm run test:cleanup && npm run test",
    "test:layout": "node scripts/validate-component-layouts.js",
    "test:layout:ci": "npm run test:layout --silent",
    "test:layout:watch": "npm run test:layout -- --watch",
    "test:layout:coverage": "npm run test -- src/**/*.layout.test.ts --coverage",
    "test:layout:component": "npm run test -- src/components/",
    "test:storybook": "test-storybook",
    "test:storybook:ci": "test-storybook --ci",
    "test:storybook:coverage": "test-storybook --coverage",
    "test:all": "npm run test:ci && npm run test:storybook:ci",
    "test:integration": "vitest __tests__/integration/**/*.test.ts",
    "test:user-flows": "vitest __tests__/integration/user-flow-scenarios.test.ts",
    "test:edge-cases": "vitest __tests__/integration/edge-case-scenarios.test.ts",
    "test:cross-component": "vitest __tests__/integration/cross-component-workflows.test.ts",
    "test:full-coverage": "npm run test:ci && npm run test:integration && npm run test:storybook:ci",
    "// BROWSER-DEPENDENT TESTING": "",
    "test:browser": "vitest run --config vitest.browser.config.ts",
    "test:browser:watch": "vitest --config vitest.browser.config.ts",
    "test:browser:coverage": "vitest run --coverage --config vitest.browser.config.ts",
    "test:browser:tooltip": "vitest run --config vitest.browser.config.ts src/components/tooltip/usa-tooltip.browser.test.ts",
    "test:browser-required": "playwright test tests/browser-required",
    "test:browser-required:time-picker": "playwright test tests/browser-required/time-picker.spec.ts",
    "test:browser-required:tooltip": "playwright test tests/browser-required/tooltip.spec.ts",
    "test:browser-required:modal": "playwright test tests/browser-required/modal.spec.ts",
    "test:browser-required:comprehensive": "playwright test tests/browser-required/comprehensive.spec.ts",
    "test:browser-required:headed": "playwright test tests/browser-required --headed",
    "test:browser-required:debug": "playwright test tests/browser-required --debug",
    "test:visual-regression": "npm run test:browser && npm run test:storybook:ci",
    "test:complete": "npm run test && npm run test:browser && npm run test:storybook:ci",
    "test:production-ready": "npm run test && npm run test:browser-required && npm run test:storybook:ci",
    "// PRODUCTION SMOKE TESTS": "",
    "test:production:smoke": "node scripts/test/production-smoke-tests.js",
    "test:production:smoke:critical": "node scripts/test/production-smoke-tests.js --critical-only",
    "test:production:smoke:url": "node scripts/test/production-smoke-tests.js --url=",
    "test:canary": "node scripts/test/production-smoke-tests.js --critical-only --timeout=10000",
    "// FLAKY TEST DETECTION": "",
    "test:flaky-detection": "node scripts/test/flaky-test-detector.js",
    "test:flaky-detection:verbose": "node scripts/test/flaky-test-detector.js --verbose",
    "test:flaky-detection:runs": "node scripts/test/flaky-test-detector.js --runs=20",
    "test:flaky-detection:quarantine": "node scripts/test/flaky-test-detector.js --quarantine",
    "test:repeat": "node scripts/test/flaky-test-detector.js --runs=5",
    "// TEST HEALTH & VALIDATION": "",
    "test:validate-health": "node scripts/validate-test-health.js",
    "test:validate-health:fix": "node scripts/validate-test-health.js --fix",
    "test:validate-health:verbose": "node scripts/validate-test-health.js --verbose",
    "test:validate-health:component": "node scripts/validate-test-health.js --component=",
    "test:health-report": "npm run test:validate-health && echo '📄 See test-health-report.json for details'",
    "// MUTATION TESTING": "",
    "test:mutation": "stryker run",
    "test:mutation:report": "stryker run && open reports/mutation/index.html",
    "test:mutation:incremental": "stryker run --incremental",
    "test:mutation:html-report": "open reports/mutation/index.html",
    "// CONTRACT TESTING": "",
    "test:contracts": "node scripts/test/contract-testing.js",
    "test:contracts:generate": "node scripts/test/contract-testing.js --mode=generate",
    "test:contracts:validate": "node scripts/test/contract-testing.js --mode=validate",
    "test:contracts:component": "node scripts/test/contract-testing.js --component=",
    "test:contracts:verbose": "node scripts/test/contract-testing.js --verbose",
    "// PERFORMANCE REGRESSION TRACKING": "",
    "test:performance": "node scripts/test/performance-regression-tracker.js",
    "test:performance:baseline": "node scripts/test/performance-regression-tracker.js --mode=baseline",
    "test:performance:compare": "node scripts/test/performance-regression-tracker.js --mode=compare",
    "test:performance:report": "node scripts/test/performance-regression-tracker.js --mode=report",
    "test:performance:verbose": "node scripts/test/performance-regression-tracker.js --verbose",
    "// REGRESSION TESTING": "",
    "test:regression:baseline": "node scripts/regression-testing-framework.js --mode=baseline",
    "test:regression:validate": "node scripts/regression-testing-framework.js --mode=validate",
    "test:regression:update": "node scripts/regression-testing-framework.js --mode=update",
    "test:regression:verbose": "node scripts/regression-testing-framework.js --mode=validate --verbose",
    "test:regression:range-slider": "vitest run src/components/range-slider/usa-range-slider.test.ts --reporter=verbose --testNamePattern='REGRESSION'",
    "test:regression:in-page-nav": "vitest run src/components/in-page-navigation/usa-in-page-navigation.test.ts --reporter=verbose --testNamePattern='REGRESSION'",
    "test:regression:components": "npm run test:regression:range-slider && npm run test:regression:in-page-nav",
    "test:regression:structural": "vitest run __tests__/date-picker-structure-regression.test.ts __tests__/uswds-dynamic-structure-validation.test.ts __tests__/visual-regression-prevention.test.ts",
    "test:regression:structural:watch": "vitest __tests__/date-picker-structure-regression.test.ts __tests__/uswds-dynamic-structure-validation.test.ts __tests__/visual-regression-prevention.test.ts",
    "test:styling-regression": "vitest run __tests__/uswds-enhancement-validation.test.ts __tests__/date-picker-structure-regression.test.ts",
    "test:enhancement-validation": "vitest run __tests__/uswds-enhancement-validation.test.ts",
    "test:styling-validation": "npm run test:styling-regression",
    "test:prevent-styling-issues": "npm run test:styling-regression",
    "// COMPREHENSIVE REGRESSION PREVENTION": "",
    "test:regression:infrastructure": "vitest run __tests__/infrastructure",
    "test:regression:browser-testing": "vitest run __tests__/infrastructure/browser-testing-validation.test.ts",
    "test:regression:uswds-patterns": "vitest run __tests__/infrastructure/uswds-pattern-validation.test.ts",
    "test:regression:build-environment": "vitest run __tests__/infrastructure/build-environment-validation.test.ts",
    "test:regression:component-architecture": "vitest run __tests__/infrastructure/component-architecture-validation.test.ts",
    "test:regression:success-rate": "vitest run __tests__/infrastructure/test-success-rate-monitor.test.ts",
    "test:regression:comprehensive": "./scripts/validate-regression-prevention.sh",
    "test:regression:all": "npm run test:regression:comprehensive && npm run test:regression:structural",
    "// USWDS INTEGRATION TESTING": "",
    "test:uswds": "vitest __tests__/ci-uswds-integration.test.ts",
    "test:uswds:config": "vitest __tests__/vite-uswds-config.test.ts",
    "test:uswds:integration": "vitest run --reporter=verbose --testNamePattern='USWDS.*Integration'",
    "test:uswds:health": "npm run test:uswds:config && npm run test:uswds",
    "test:uswds:ci": "npm run test:uswds:health --reporter=json",
    "test:uswds:validate": "npm run test:uswds:health && echo '✅ USWDS integration is healthy'",
    "// COMPONENT INTERACTION TESTING (NEW)": "",
    "test:interactions": "node scripts/test-component-interactions.js",
    "test:interactions:accordion": "node scripts/test-component-interactions.js --component=accordion",
    "test:interactions:verbose": "node scripts/test-component-interactions.js --verbose",
    "test:accordion:interaction": "vitest run __tests__/accordion-interaction.test.ts",
    "cypress:component:interactions": "cypress run --component cypress/component/accordion-interaction.cy.ts",
    "// COMPONENT MIGRATION & ANALYSIS": "",
    "analyze:component-integration": "node scripts/analyze-component-uswds-integration.js",
    "migrate:component": "node scripts/migrate-component-uswds-pattern.js",
    "migrate:components:critical": "node scripts/migrate-component-uswds-pattern.js --phase=1",
    "migrate:components:interactive": "node scripts/migrate-component-uswds-pattern.js --phase=2",
    "validate:component-interactions": "node scripts/validate-component-interactions.js",
    "// USWDS COMPLIANCE (UNIFIED SYSTEM)": "",
    "validate:uswds-compliance": "node scripts/validate/validate-all-components-compliance.js",
    "fix:uswds-compliance": "node scripts/validate/auto-fix-compliance.js",
    "// LEGACY USWDS SCRIPTS (consider deprecating)": "",
    "validate:uswds-loading": "node scripts/validate-uswds-loading.js",
    "validate:uswds-loading:fix": "node scripts/fix-uswds-loading.js",
    "// SLOT RENDERING VALIDATION": "",
    "validate:slots": "node scripts/validate/validate-slot-rendering.js",
    "validate:slots:quiet": "node scripts/validate/validate-slot-rendering.js --quiet",
    "validate:slots:strict": "node scripts/validate/validate-slot-rendering.js --warnings-as-errors",
    "// CODE QUALITY": "",
    "lint": "eslint src --ext .ts,.js",
    "lint:fix": "eslint src --ext .ts,.js --fix",
    "format": "prettier --write src/**/*.{ts,js,css,scss}",
    "format:check": "prettier --check src/**/*.{ts,js,css,scss}",
    "validate:registrations": "node scripts/validate/validate-component-registrations.js",
    "validate:test-expectations": "node scripts/test/regression-test-validator.js",
    "// OVER-ENGINEERING PREVENTION": "",
    "detect:over-engineering": "node scripts/validate/detect-over-engineering.js",
    "detect:issues": "node scripts/validate/auto-detect-component-issues.js",
    "detect:issues:fix": "node scripts/validate/auto-detect-component-issues.js --fix",
    "detect:issues:verbose": "node scripts/validate/auto-detect-component-issues.js --verbose",
    "detect:over-engineering:ci": "node scripts/validate/detect-over-engineering.js --ci",
    "check:guidelines-freshness": "echo 'Archived - one-time audit complete'",
    "audit:component-library": "echo 'Archived - use npm run validate:uswds-compliance instead'",
    "audit:full": "npm run validate:uswds-compliance && npm run detect:over-engineering",
    "maintenance:monthly": "npm run check:guidelines-freshness && npm run detect:over-engineering",
    "quality:check": "echo 'Running quality checks (REQUIRED before commit):' && npm run test -- --run && npm run test:layout:ci && npm run typecheck && npm run lint && npm run detect:over-engineering && npm run validate:uswds-compliance && npm run validate:registrations && npm run validate:slots && echo '✅ All quality checks passed!'",
    "// DUPLICATE INITIALIZATION PREVENTION": "",
    "check:initialization": "chmod +x scripts/pre-commit-initialization-check.sh && ./scripts/pre-commit-initialization-check.sh",
    "fix:initialization": "node scripts/fix-duplicate-initialization.js",
    "validate:component-init": "node scripts/validate-component-initialization.js",
    "validate:component-architecture": "npm test -- __tests__/component-validation.test.ts",
    "test:duplicates": "npm test -- --testNamePattern='duplicate.*initialization'",
    "test:monitor": "node scripts/test-monitor.js",
    "test:performance:monitor": "node scripts/test-performance-monitor.js",
    "test:performance:auto-optimize": "node scripts/test-performance-monitor.js --optimize",
    "test:flaky:legacy": "node scripts/flaky-test-detector.js",
    "test:flaky:verbose:legacy": "node scripts/flaky-test-detector.js --verbose",
    "test:flaky:runs:legacy": "node scripts/flaky-test-detector.js --runs=20",
    "test:flaky:quarantine:legacy": "node scripts/flaky-test-detector.js --quarantine",
    "test:critical": "npm test src/components/date-picker/usa-date-picker.test.ts src/components/list/usa-list.test.ts src/components/date-range-picker/usa-date-range-picker.test.ts src/components/text-input/usa-text-input.test.ts src/components/table/usa-table.test.ts src/components/memorable-date/usa-memorable-date.test.ts src/components/icon/usa-icon.test.ts",
    "test:generate": "node scripts/automated-test-generator.js",
    "test:generate:all": "node scripts/automated-test-generator.js all",
    "test:generate:dry-run": "node scripts/automated-test-generator.js all --dry-run",
    "// E2E TESTING": "",
    "cypress:open": "cypress open",
    "cypress:run": "cypress run",
    "cypress:component": "cypress run --component",
    "cypress:component:open": "cypress open --component",
    "cypress:smoke": "cypress run --spec 'cypress/e2e/smoke-tests.cy.ts' --config video=false,screenshotOnRunFailure=false",
    "cypress:smoke:headed": "cypress run --spec 'cypress/e2e/smoke-tests.cy.ts' --headed --config video=false",
    "cypress:storybook": "cypress run --spec 'cypress/e2e/storybook-integration.cy.ts'",
    "cypress:navigation": "cypress run --spec 'cypress/e2e/storybook-navigation-test.cy.ts'",
    "cypress:navigation:open": "cypress open --e2e --browser chrome",
    "e2e": "start-server-and-test storybook http://localhost:6006 cypress:run",
    "e2e:open": "start-server-and-test storybook http://localhost:6006 cypress:open",
    "e2e:smoke": "start-server-and-test storybook http://localhost:6006 cypress:smoke",
    "e2e:storybook": "start-server-and-test storybook http://localhost:6006 cypress:storybook",
    "// CYPRESS TEST GENERATION": "",
    "cypress:generate": "bash scripts/generate-cypress-test.sh",
    "cypress:test:interactive": "bash scripts/generate-cypress-test.sh modal && bash scripts/generate-cypress-test.sh combo-box && bash scripts/generate-cypress-test.sh date-picker && bash scripts/generate-cypress-test.sh header && bash scripts/generate-cypress-test.sh table",
    "cypress:test:forms": "bash scripts/generate-cypress-test.sh checkbox && bash scripts/generate-cypress-test.sh text-input && bash scripts/generate-cypress-test.sh textarea && bash scripts/generate-cypress-test.sh select && bash scripts/generate-cypress-test.sh file-input",
    "cypress:test:all": "node scripts/generate-all-cypress-tests.js",
    "// ENHANCED TESTING": "",
    "test:cypress:check": "node scripts/generate-cypress-tests.js",
    "test:cypress:generate": "node scripts/generate-cypress-tests.js --generate",
    "test:rapid-interaction": "cypress run --component --spec 'src/**/*.component.cy.ts'",
    "test:real-world": "npm run test:ci && npm run test:rapid-interaction && npm run test:storybook:ci",
    "test:pre-commit": "echo 'Running pre-commit Cypress validation...' && npx cypress run --component --spec 'src/components/accordion/usa-accordion.component.cy.ts' --headless --quiet --config video=false,screenshotOnRunFailure=false",
    "// VISUAL TESTING": "",
    "visual:test": "chromatic --exit-zero-on-changes",
    "visual:ci": "chromatic --ci --exit-zero-on-changes",
    "visual:review": "chromatic --skip 'dependabot/**'",
    "visual:local": "playwright test --config=visual.config.ts",
    "visual:baseline": "chromatic --auto-accept-changes",
    "visual:debug": "chromatic --debug",
    "// CROSS-BROWSER TESTING": "",
    "test:cross-browser:ui": "playwright test --config playwright.config.ts --ui",
    "test:browsers": "playwright test --project chromium --project firefox --project webkit",
    "test:mobile": "playwright test --project mobile-chrome --project mobile-safari",
    "test:smoke": "playwright test --project chromium --grep 'smoke|critical'",
    "test:accessibility": "playwright test --project accessibility-chrome --grep 'accessibility|a11y|aria'",
    "test:bundle-size": "node scripts/bundle-size-test.js",
    "validate:bundle-size": "node scripts/validate/check-bundle-size.js",
    "validate:bundle-size:strict": "node scripts/validate/check-bundle-size.js --strict",
    "// INTEGRATION TESTING": "",
    "// COMPREHENSIVE TESTING (Phase 4)": "",
    "test:comprehensive": "node scripts/test-orchestrator.js",
    "test:comprehensive:fast": "node scripts/test-orchestrator.js --no-performance --no-visual",
    "test:comprehensive:critical": "node scripts/test-orchestrator.js --no-performance --no-visual --no-cross-browser",
    "test:comprehensive:full": "node scripts/test-orchestrator.js --visual --html",
    "test:comprehensive:ci": "node scripts/test-orchestrator.js --fail-fast --no-visual",
    "test:comprehensive:local": "node scripts/test-orchestrator.js --html --verbose",
    "test:comprehensive:security": "npx playwright test tests/security/ --config=playwright.comprehensive.config.ts",
    "test:comprehensive:accessibility": "npx playwright test tests/accessibility/ --config=playwright.comprehensive.config.ts",
    "test:comprehensive:performance": "npx playwright test tests/performance/ --config=playwright.comprehensive.config.ts",
    "test:comprehensive:error-recovery": "npx playwright test tests/error-recovery/ --config=playwright.comprehensive.config.ts",
    "test:comprehensive:progressive": "npx playwright test tests/progressive-enhancement/ --config=playwright.comprehensive.config.ts",
    "test:comprehensive:contracts": "npx playwright test tests/api-contracts/ --config=playwright.comprehensive.config.ts",
    "test:comprehensive:report": "node scripts/test-orchestrator.js --html --report-path ./test-reports/comprehensive",
    "test:full-suite": "npm run test:comprehensive:full",
    "test:ci-extended": "npm run test:comprehensive:ci",
    "test:bundle-analysis": "node tests/performance/bundle-analysis.test.js",
    "// USWDS INTEGRATION": "",
    "uswds:init": "npx gulp --gulpfile gulpfile.cjs init",
    "uswds:compile": "npx gulp --gulpfile gulpfile.cjs compile",
    "uswds:watch": "npx gulp --gulpfile gulpfile.cjs watch",
    "// USWDS COMPLIANCE": "",
    "uswds:check-updates": "node scripts/uswds-version-check.js",
    "uswds:compliance": "node scripts/validate/validate-all-components-compliance.js",
    "uswds:compliance:static": "node scripts/validate/validate-all-components-compliance.js",
    "uswds:monitor": "node scripts/component-compliance-monitor.js monitor",
    "uswds:monitor:component": "node scripts/component-compliance-monitor.js monitor",
    "uswds:behavior": "node scripts/uswds-behavior-tests.js",
    "uswds:deep-check": "npm run uswds:compliance && npm run uswds:monitor && npm run uswds:behavior",
    "// USWDS MIRRORED BEHAVIOR VALIDATION": "",
    "uswds:validate-sync": "node scripts/validate/validate-uswds-sync.js",
    "uswds:check-behavior-sync": "node scripts/validate/check-uswds-behavior-sync.js",
    "uswds:validate": "node scripts/validate/validate-all-components-compliance.js",
    "uswds:audit": "echo 'Archived - use npm run validate:uswds-compliance instead'",
    "uswds:sync": "npm run uswds:check-updates && npm run uswds:update-classes && npm run uswds:compliance && npm run test:accessibility",
    "uswds:behavioral": "node scripts/behavioral-compliance-testing.js",
    "uswds:enhanced": "node scripts/validate/validate-all-components-compliance.js",
    "uswds:test-simple": "node scripts/simple-behavioral-testing.js",
    "uswds:test-storybook": "node scripts/storybook-behavioral-testing.js",
    "uswds:test-comprehensive": "node scripts/comprehensive-behavioral-testing.js",
    "uswds:test-expanded": "node scripts/expanded-comprehensive-testing.js",
    "uswds:test-smart": "node scripts/smart-comprehensive-testing.js",
    "uswds:investigate": "echo 'Archived - manual investigation tool no longer needed'",
    "validate:transformations": "node scripts/validate-uswds-transformation.js",
    "validate:transformations:generate": "node scripts/validate-uswds-transformation.js --generate",
    "validate:transformations:browser": "node scripts/test-browser-transformation.js",
    "validate:transformations:full": "npm run validate:transformations && npm run validate:transformations:browser",
    "validate:transformations:critical": "echo '🚨 Testing critical high-risk components' && npm run validate:transformations:browser",
    "validate:regression:combo-box": "echo '📋 Combo Box Regression Prevention' && npm run validate:transformations && echo 'Static validation complete'",
    "validate:script-organization": "node scripts/validate/validate-script-organization.js",
    "validate:regression:time-picker": "echo '⏰ Time Picker Regression Prevention (HIGH RISK)' && npm run validate:transformations && echo 'Run browser tests with: npm run validate:transformations:browser'",
    "validate:regression:date-picker": "echo '📅 Date Picker Regression Prevention (HIGH RISK)' && npm run validate:transformations && echo 'Run browser tests with: npm run validate:transformations:browser'",
    "// PHASE 2: ADVANCED REGRESSION PREVENTION": "",
    "test:visual:regression": "node scripts/visual-regression-testing.js --validate",
    "test:visual:baseline": "node scripts/visual-regression-testing.js --baseline",
    "test:cross-browser": "node scripts/cross-browser-validation.js",
    "test:pr-comment": "node scripts/pr-comment-automation.js",
    "generate:pr-report": "node scripts/generate-pr-validation-report.js",
    "generate:pr-comment": "node scripts/generate-pr-comment.js",
    "validate:transformations:visual": "npm run test:visual:regression",
    "validate:transformations:performance": "npm run test:performance:monitor",
    "validate:transformations:advanced": "npm run test:cross-browser && npm run test:visual:regression && npm run test:performance:monitor",
    "// USWDS-FIRST METHODOLOGY": "",
    "validate:uswds-first": "node scripts/uswds-first-validation.js",
    "validate:uswds-first:strict": "node scripts/uswds-first-validation.js --strict",
    "validate:changes": "node scripts/uswds-first-validation.js --strict",
    "validate:minimal-wrapper": "node scripts/enforce-minimal-wrapper.js",
    "validate:wrapper": "node scripts/enforce-minimal-wrapper.js",
    "validate:all": "npm run typecheck && npm run lint && npm run validate:uswds-compliance && npm run validate:double-init && npm run test:critical",
    "// REGRESSION PREVENTION": "",
    "validate:regression": "npm run test -- regression-prevention",
    "validate:accessibility-gate": "node scripts/accessibility-gate.js",
    "validate:uswds-optimization": "node scripts/monitor-uswds-optimization.js",
    "validate:compliance-regression": "npm run validate:regression && npm run validate:accessibility-gate && npm run validate:uswds-optimization",
    "pre-commit": "lint-staged",
    "uswds:test-integrated": "node scripts/integrated-testing-system.js",
    "uswds:detect-issues": "node scripts/validate/auto-detect-component-issues.js",
    "uswds:validate-alignment": "node scripts/validate/validate-all-components-compliance.js",
    "uswds:validate-datepicker": "echo 'Use npm run validate:uswds-compliance instead'",
    "uswds:validate-critical": "node scripts/validate-critical-components.js",
    "uswds:validate-javascript": "node scripts/uswds-javascript-validation.js",
    "uswds:extract-classes": "node scripts/extract-complete-uswds-classes.js",
    "uswds:update-classes": "node scripts/auto-update-uswds-classes.js",
    "uswds:update-classes:force": "node scripts/auto-update-uswds-classes.js --force",
    "uswds:update-classes:check": "node scripts/auto-update-uswds-classes.js --check-only",
    "// COMPONENT GENERATION": "",
    "generate:enhanced": "node scripts/enhanced-component-generator.js",
    "docs:generate": "node scripts/generate-api-docs.js",
    "docs:generate:all": "node scripts/generate-api-docs.js --all",
    "docs:templates": "node scripts/generate/update-documentation.cjs",
    "docs:templates:check": "node scripts/generate/update-documentation.cjs --check",
    "// AI-POWERED TESTING - Phase 5": "",
    "ai:generate-tests": "node scripts/ai-test-generator.js",
    "ai:generate-all": "node scripts/ai-test-generator.js --all",
    "ai:analyze": "node scripts/ai-test-generator.js --all --dry-run",
    "ai:generate:smart": "node scripts/ai-test-generator.js --categories=accessibility,events,edgeCases",
    "// INTELLIGENT TEST OPTIMIZATION - Phase 5": "",
    "test:optimize": "node scripts/intelligent-test-parallelizer.js --analyze",
    "test:optimize:dry-run": "node scripts/intelligent-test-parallelizer.js --dry-run",
    "test:optimize:execute": "node scripts/intelligent-test-parallelizer.js --execute",
    "// PREDICTIVE REGRESSION TESTING - Phase 5": "",
    "test:predict": "node scripts/predictive-regression-tester.js",
    "test:predict:dry-run": "node scripts/predictive-regression-tester.js --dry-run",
    "test:predict:verbose": "node scripts/predictive-regression-tester.js --verbose",
    "test:predict:fast": "node scripts/predictive-regression-tester.js --max-selection 0.3 --confidence 0.8",
    "test:predict:thorough": "node scripts/predictive-regression-tester.js --max-selection 0.8 --confidence 0.4",
    "test:smart": "node scripts/predictive-regression-tester.js --dry-run --verbose",
    "// CHAOS ENGINEERING - Phase 5": "",
    "test:chaos": "node scripts/chaos-engineering-tester.js",
    "test:chaos:dry-run": "node scripts/chaos-engineering-tester.js --dry-run",
    "test:chaos:verbose": "node scripts/chaos-engineering-tester.js --verbose",
    "test:chaos:low": "node scripts/chaos-engineering-tester.js --intensity low",
    "test:chaos:medium": "node scripts/chaos-engineering-tester.js --intensity medium",
    "test:chaos:high": "node scripts/chaos-engineering-tester.js --intensity high",
    "test:chaos:extreme": "node scripts/chaos-engineering-tester.js --intensity extreme --verbose",
    "test:chaos:network": "node scripts/chaos-engineering-tester.js --chaos-types network",
    "test:chaos:memory": "node scripts/chaos-engineering-tester.js --chaos-types memory",
    "test:resilience": "node scripts/chaos-engineering-tester.js --intensity medium --verbose",
    "// SMART TEST RECOMMENDATIONS - Phase 5": "",
    "test:recommend": "node scripts/smart-test-recommendations.js",
    "test:recommend:verbose": "node scripts/smart-test-recommendations.js --verbose",
    "test:recommend:report": "node scripts/smart-test-recommendations.js --output markdown --verbose",
    "test:recommend:json": "node scripts/smart-test-recommendations.js --output json",
    "test:recommend:high": "node scripts/smart-test-recommendations.js --priority high --verbose",
    "test:recommend:comprehensive": "node scripts/smart-test-recommendations.js --analysis-depth comprehensive --output markdown",
    "test:gaps": "node scripts/smart-test-recommendations.js --priority high",
    "// DOCUMENTATION": "",
    "docs:help": "echo 'USWDS Web Components Documentation:' && echo '📚 README.md - Project overview' && echo '🤖 CLAUDE.md - Complete development guidelines' && echo '📖 docs/ - Implementation guides' && echo '🧪 npm run test - REQUIRED before commit' && echo '🎨 npm run storybook - Visual testing'",
    "docs:validate": "node scripts/validate-docs.js",
    "docs:sync": "node scripts/sync-component-docs.js",
    "docs:auto-update": "node scripts/auto-update-docs.js",
    "docs:update-optimization": "node scripts/build/auto-update-optimization-docs.js",
    "// CHANGELOG MANAGEMENT": "",
    "changelog:init": "node scripts/manage-changelogs.js init",
    "changelog:update": "node scripts/manage-changelogs.js update",
    "changelog:validate": "node scripts/manage-changelogs.js validate",
    "// MAINTENANCE": "",
    "scripts:check": "node scripts/maintain-scripts.js",
    "scripts:clean": "node scripts/maintain-scripts.js --fix",
    "audit:tests": "node scripts/audit-critical-tests.js",
    "quality-check": "node scripts/quality-check.js",
    "docs:cleanup": "node scripts/maintenance/cleanup-documentation.cjs",
    "docs:cleanup:dry-run": "node scripts/maintenance/cleanup-documentation.cjs --dry-run",
    "docs:analyze": "node scripts/maintenance/cleanup-documentation.cjs --dry-run",
    "// TESTING INFRASTRUCTURE HEALTH": "",
    "testing:health": "node scripts/testing-health-monitor.js",
    "testing:health:auto": "node scripts/testing-health-monitor.js --auto-heal",
    "testing:verify": "npm run testing:health && npm run validate:all",
    "// COMMIT HELPERS": "",
    "commit": "node scripts/commit-helper.js",
    "commit:smart": "node scripts/smart-commit.js",
    "// GIT HOOKS (AUTO-RUN)": "",
    "prepare": "husky",
    "compliance:accordion": "node src/components/accordion/usa-accordion.compliance.js",
    "compliance:alert": "node src/components/alert/usa-alert.compliance.js",
    "compliance:banner": "node src/components/banner/usa-banner.compliance.js",
    "compliance:breadcrumb": "node src/components/breadcrumb/usa-breadcrumb.compliance.js",
    "compliance:button": "node src/components/button/usa-button.compliance.js",
    "compliance:button-group": "node src/components/button-group/usa-button-group.compliance.js",
    "compliance:card": "node src/components/card/usa-card.compliance.js",
    "compliance:character-count": "node src/components/character-count/usa-character-count.compliance.js",
    "compliance:checkbox": "node src/components/checkbox/usa-checkbox.compliance.js",
    "compliance:collection": "node src/components/collection/usa-collection.compliance.js",
    "compliance:combo-box": "node src/components/combo-box/usa-combo-box.compliance.js",
    "compliance:date-picker": "node src/components/date-picker/usa-date-picker.compliance.js",
    "compliance:date-range-picker": "node src/components/date-range-picker/usa-date-range-picker.compliance.js",
    "compliance:file-input": "node src/components/file-input/usa-file-input.compliance.js",
    "compliance:footer": "node src/components/footer/usa-footer.compliance.js",
    "compliance:header": "node src/components/header/usa-header.compliance.js",
    "compliance:icon": "node src/components/icon/usa-icon.compliance.js",
    "compliance:identifier": "node src/components/identifier/usa-identifier.compliance.js",
    "compliance:in-page-navigation": "node src/components/in-page-navigation/usa-in-page-navigation.compliance.js",
    "compliance:input-prefix-suffix": "node src/components/input-prefix-suffix/usa-input-prefix-suffix.compliance.js",
    "compliance:language-selector": "node src/components/language-selector/usa-language-selector.compliance.js",
    "compliance:link": "node src/components/link/usa-link.compliance.js",
    "compliance:list": "node src/components/list/usa-list.compliance.js",
    "compliance:memorable-date": "node src/components/memorable-date/usa-memorable-date.compliance.js",
    "compliance:menu": "node src/components/menu/usa-menu.compliance.js",
    "compliance:modal": "node src/components/modal/usa-modal.compliance.js",
    "compliance:pagination": "node src/components/pagination/usa-pagination.compliance.js",
    "compliance:process-list": "node src/components/process-list/usa-process-list.compliance.js",
    "compliance:prose": "node src/components/prose/usa-prose.compliance.js",
    "compliance:radio": "node src/components/radio/usa-radio.compliance.js",
    "compliance:range-slider": "node src/components/range-slider/usa-range-slider.compliance.js",
    "compliance:search": "node src/components/search/usa-search.compliance.js",
    "compliance:section": "node src/components/section/usa-section.compliance.js",
    "compliance:select": "node src/components/select/usa-select.compliance.js",
    "compliance:side-navigation": "node src/components/side-navigation/usa-side-navigation.compliance.js",
    "compliance:site-alert": "node src/components/site-alert/usa-site-alert.compliance.js",
    "compliance:skip-link": "node src/components/skip-link/usa-skip-link.compliance.js",
    "compliance:step-indicator": "node src/components/step-indicator/usa-step-indicator.compliance.js",
    "compliance:summary-box": "node src/components/summary-box/usa-summary-box.compliance.js",
    "compliance:table": "node src/components/table/usa-table.compliance.js",
    "compliance:tag": "node src/components/tag/usa-tag.compliance.js",
    "compliance:text-input": "node src/components/text-input/usa-text-input.compliance.js",
    "compliance:textarea": "node src/components/textarea/usa-textarea.compliance.js",
    "compliance:time-picker": "node src/components/time-picker/usa-time-picker.compliance.js",
    "compliance:tooltip": "node src/components/tooltip/usa-tooltip.compliance.js",
    "compliance:validation": "node src/components/validation/usa-validation.compliance.js",
    "compliance:all": "node scripts/run-all-compliance.js",
    "compliance:generate": "node scripts/generate-component-compliance.js",
    "// SELECTIVE COMPLIANCE (Smart Pre-commit)": "",
    "compliance:selective": "node scripts/selective-component-compliance.js",
    "compliance:selective:all": "node scripts/selective-component-compliance.js --all",
    "compliance:selective:help": "node scripts/selective-component-compliance.js --help",
    "// TOOLTIP TROUBLESHOOTING PREVENTION TESTS": "",
    "test:dom-transformation": "vitest run __tests__/uswds-dom-transformation-validation.test.ts",
    "test:storybook-iframe": "vitest run __tests__/storybook-iframe-environment-validation.test.ts",
    "test:multi-phase-attributes": "vitest run __tests__/multi-phase-attribute-validation.test.ts",
    "test:light-dom-slots": "vitest run __tests__/light-dom-slot-behavior-validation.test.ts",
    "test:module-optimization": "vitest run __tests__/uswds-module-optimization-validation.test.ts",
    "test:tooltip-prevention": "npm run test:dom-transformation && npm run test:storybook-iframe && npm run test:multi-phase-attributes && npm run test:light-dom-slots && npm run test:module-optimization",
    "// HIGH-RISK COMPONENT VALIDATION": "",
    "test:modal-validation": "vitest run __tests__/modal-uswds-validation.test.ts",
    "test:accordion-validation": "vitest run __tests__/accordion-uswds-validation.test.ts",
    "test:date-picker-validation": "vitest run __tests__/date-picker-uswds-validation.test.ts",
    "test:combo-box-validation": "vitest run __tests__/combo-box-uswds-validation.test.ts",
    "test:time-picker-validation": "vitest run __tests__/time-picker-uswds-validation.test.ts",
    "test:header-validation": "vitest run __tests__/header-uswds-validation.test.ts",
    "test:tooltip-validation": "vitest run __tests__/tooltip-uswds-validation.test.ts",
    "test:high-risk-components": "npm run test:modal-validation && npm run test:accordion-validation && npm run test:date-picker-validation && npm run test:combo-box-validation && npm run test:time-picker-validation && npm run test:header-validation && npm run test:tooltip-validation",
    "// COMPONENT VALIDATION GENERATOR": "",
    "generate:component-validation": "node scripts/component-validation-generator.js",
    "generate:validation:high-risk": "node scripts/component-validation-generator.js --risk=high",
    "generate:validation:medium-risk": "node scripts/component-validation-generator.js --risk=medium",
    "generate:validation:low-risk": "node scripts/component-validation-generator.js --risk=low",
    "list:component-risks": "node scripts/component-validation-generator.js --list",
    "detect:initialization-issues": "node scripts/detect-initialization-issues.js",
    "fix:initialization:guards": "node scripts/fix-initialization-guards.js",
    "fix:initialization:guards:dry-run": "node scripts/fix-initialization-guards.js --dry-run",
    "setup:initialization:prevention": "node scripts/setup-initialization-prevention.js",
    "validate:uswds-patterns": "npm run detect:initialization-issues && npm run lint",
    "pre-commit:initialization": "npm run detect:initialization-issues && npm run fix:initialization:guards:dry-run",
    "// REGRESSION PREVENTION TOOLS": "",
    "validate:regression-prevention": "./scripts/validate-regression-prevention.sh",
    "fix:common-issues": "./scripts/auto-fix-common-issues.sh",
    "fix:common-issues:component": "./scripts/auto-fix-common-issues.sh",
    "validate:component-javascript": "node scripts/validate/validate-component-javascript.js",
    "validate:js": "node scripts/validate/validate-component-javascript.js"
  },
  "keywords": [
    "uswds",
    "web-components",
    "custom-elements",
    "lit",
    "design-system",
    "government",
    "accessibility",
    "typescript"
  ],
  "author": "Barbara Miles",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/barbaramiles/USWDS-webcomponents.git"
  },
  "homepage": "https://barbaradenney.github.io/USWDS-webcomponents/",
  "bugs": {
    "url": "https://github.com/barbaramiles/USWDS-webcomponents/issues"
  },
  "peerDependencies": {
    "lit": "^3.0.0"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write",
      "npm run validate-syntax"
    ],
    "src/index.ts": [
      "npm run validate:registrations"
    ],
    "*.component.cy.ts": [
      "eslint --fix",
      "prettier --write",
      "echo 'Cypress test file updated, will validate rapid interaction tests in pre-commit hook'"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@changesets/cli": "^2.29.7",
    "@cypress/vite-dev-server": "^7.0.0",
    "@fullhuman/postcss-purgecss": "^7.0.2",
    "@octokit/rest": "^22.0.0",
    "@playwright/test": "^1.55.0",
    "@storybook/addon-a11y": "^9.1.10",
    "@storybook/addon-coverage": "^2.0.0",
    "@storybook/addon-docs": "^9.1.10",
    "@storybook/addon-links": "^9.1.10",
    "@storybook/addon-vitest": "^9.1.10",
    "@storybook/test-runner": "^0.23.0",
    "@storybook/web-components-vite": "^9.1.10",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@uswds/compile": "^1.1.0",
    "@uswds/uswds": "^3.13.0",
    "@vitest/browser": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "@whitespace/storybook-addon-html": "^8.0.2",
    "autoprefixer": "^10.4.21",
    "axe-core": "^4.10.3",
    "axe-playwright": "^2.2.2",
    "canvas": "^3.2.0",
    "chromatic": "^13.1.4",
    "cssnano": "^7.1.1",
    "cypress": "^15.1.0",
    "cypress-axe": "^1.7.0",
    "cypress-plugin-tab": "^1.0.5",
    "cypress-storybook": "^1.0.0",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-lit": "^1.10.0",
    "eslint-plugin-storybook": "9.1.10",
    "eslint-plugin-wc": "^2.0.0",
    "gulp": "^5.0.1",
    "gzip-size": "^7.0.0",
    "husky": "^9.1.7",
    "imagemin-gifsicle": "^7.0.0",
    "imagemin-mozjpeg": "^10.0.0",
    "imagemin-pngquant": "^10.0.0",
    "imagemin-svgo": "^11.0.1",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.6",
    "playwright": "^1.55.0",
    "postcss": "^8.5.6",
    "postcss-cli": "^11.0.1",
    "prettier": "^3.0.0",
    "puppeteer": "^24.22.3",
    "rehype-external-links": "^3.0.0",
    "remark-gfm": "^4.0.1",
    "rollup-plugin-visualizer": "^6.0.4",
    "sass": "^1.92.1",
    "serve": "^14.2.5",
    "start-server-and-test": "^2.0.13",
    "storybook": "^9.1.10",
    "storybook-addon-designs": "^6.3.1",
    "turbo": "^2.5.8",
    "typescript": "^5.0.2",
    "vite": "^7.1.4",
    "vite-plugin-compression": "^0.5.1",
    "vite-plugin-imagemin": "^0.6.1",
    "vitest": "^3.2.4",
    "wait-on": "^8.0.5"
  }
}
