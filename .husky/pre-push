echo "üöÄ Pre-push validation..."

# 1. Check for force push to protected branches
BRANCH=$(git branch --show-current)
PROTECTED_BRANCHES="main|master|develop"

if echo "$BRANCH" | grep -qE "^($PROTECTED_BRANCHES)$"; then
  # Check if this is a force push
  while read local_ref local_sha remote_ref remote_sha; do
    if [ "$local_sha" = "0000000000000000000000000000000000000000" ]; then
      # Deleting a branch
      echo "‚ùå Deleting protected branch $BRANCH is not allowed!"
      exit 1
    fi

    # Check if this is a force push (non-fast-forward)
    if [ "$remote_sha" != "0000000000000000000000000000000000000000" ]; then
      # Check if local is ancestor of remote (fast-forward)
      if ! git merge-base --is-ancestor "$remote_sha" "$local_sha" 2>/dev/null; then
        echo "‚ùå Force push to protected branch detected!"
        echo "   Branch: $BRANCH"
        echo "   This could overwrite team members' work."
        read -p "Are you SURE you want to force push? (yes/NO): " confirm </dev/tty
        if [ "$confirm" != "yes" ]; then
          echo "‚ùå Push cancelled"
          exit 1
        fi
      fi
    fi
  done
fi

# 2. Run full test suite (faster than waiting for CI to fail)
echo "üß™ Running full test suite..."
pnpm test || {
  echo "‚ùå Tests failed! Fix before pushing."
  echo "   Or use: git push --no-verify (not recommended)"
  exit 1
}

# 3. Verify TypeScript compiles
echo "üìò Verifying TypeScript..."
pnpm run typecheck || {
  echo "‚ùå TypeScript errors detected"
  exit 1
}

# 4. Verify linting passes
echo "üîç Verifying linting..."
pnpm run lint || {
  echo "‚ùå Linting errors detected"
  exit 1
}

echo "‚úÖ Pre-push checks passed!"
