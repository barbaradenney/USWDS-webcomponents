name: Code Quality Checks (Monorepo)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript compilation check
        run: pnpm turbo typecheck

      - name: JavaScript syntax validation
        run: pnpm run validate-syntax

      - name: Lint code
        run: pnpm turbo lint

      - name: Validate test skip policy
        run: node scripts/validate/validate-no-skipped-tests.cjs

      - name: Run unit tests with coverage
        run: pnpm turbo test --filter='!@uswds-wc/test-utils'

      - name: Build all packages
        run: pnpm turbo build

      - name: Run Storybook build test
        run: pnpm run build-storybook

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: true

  component-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Cypress binary
        run: npx cypress install

      - name: Verify Cypress
        run: npx cypress verify

      - name: Run Cypress component tests
        run: pnpm run cypress:run

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results
          path: cypress/results/

  accessibility-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Start Storybook
        run: |
          pnpm run storybook &
          npx wait-on http://localhost:6006

      - name: Run accessibility tests
        run: npx storybook-test-runner --url http://localhost:6006

  security-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for vulnerabilities
        run: pnpm audit --audit-level high --prod

  bundle-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and analyze bundle
        run: |
          pnpm turbo build
          npx bundlesize

      # Disabled: Action repository not found
      # - name: Comment bundle size
      #   uses: github-actions-up-and-running/bundle-size-diff@v1
      #   with:
      #     base_branch: main
