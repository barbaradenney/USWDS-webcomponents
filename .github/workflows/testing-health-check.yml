name: üè• Testing Infrastructure Health Check

on:
  schedule:
    # Run weekly on Mondays at 9 AM
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggers
  push:
    paths:
      - 'scripts/**/*.js'
      - '.github/workflows/*.yml'
      - 'package.json'

jobs:
  health-check:
    name: üîç Check Testing Infrastructure Health
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Health Check
        id: health
        run: |
          pnpm run testing:health > health-output.txt 2>&1
          HEALTH_SCORE=$(grep "Overall Health Score" health-output.txt | grep -oP '\d+(?=%)')
          echo "score=$HEALTH_SCORE" >> $GITHUB_OUTPUT
          cat health-output.txt

      - name: Check Script Staleness
        run: |
          # Find scripts not modified in 60+ days
          echo "Checking for stale scripts..."
          find scripts -name "*.js" -mtime +60 -type f | while read file; do
            echo "‚ö†Ô∏è Stale script (60+ days): $file"
          done

      - name: Verify Critical Commands
        run: |
          echo "Verifying critical npm commands..."
          CRITICAL_COMMANDS=(
            "dev:watch"
            "dev:monitor"
            "validate:all"
            "detect:issues"
            "test:comprehensive"
            "ai:analyze"
          )

          for cmd in "${CRITICAL_COMMANDS[@]}"; do
            if pnpm run $cmd -- --help > /dev/null 2>&1; then
              echo "‚úÖ $cmd is functional"
            else
              echo "‚ùå $cmd is broken or missing"
            fi
          done

      - name: Test Behavioral Tests
        run: |
          echo "Verifying behavioral tests are current..."
          # Check if date-picker behavioral tests exist and are valid
          if [ -f "src/components/date-picker/usa-date-picker.behavioral.cy.ts" ]; then
            echo "‚úÖ Behavioral tests present"
            # Verify they compile
            npx cypress verify
          else
            echo "‚ùå Behavioral tests missing!"
          fi

      - name: Upload Health Report
        uses: actions/upload-artifact@v4
        with:
          name: testing-health-report
          path: |
            test-reports/infrastructure/health-report.json
            test-reports/infrastructure/health-report.md
            health-output.txt

      - name: Create Issue if Unhealthy
        if: steps.health.outputs.score < 70
        uses: actions/github-script@v7
        with:
          script: |
            const score = ${{ steps.health.outputs.score }};
            const fs = require('fs');
            const report = fs.readFileSync('health-output.txt', 'utf8');

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üî¥ Testing Infrastructure Health Critical: ${score}%`,
              body: `## Testing Infrastructure Health Check Failed\n\n**Score:** ${score}%\n\n### Report\n\`\`\`\n${report}\n\`\`\`\n\n### Action Required\n- Review stale scripts\n- Update broken commands\n- Fix missing dependencies\n\nRun locally: \`pnpm run testing:health\``,
              labels: ['testing', 'infrastructure', 'maintenance']
            });

      - name: Comment on PR if Relevant
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const score = ${{ steps.health.outputs.score }};
            const status = score >= 80 ? 'üü¢' : score >= 60 ? 'üü°' : 'üî¥';

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ${status} Testing Infrastructure Health: ${score}%\n\nRun \`pnpm run testing:health\` for details.`
            });

  auto-update:
    name: üîß Auto-Update Testing Scripts
    runs-on: ubuntu-latest
    needs: health-check
    if: github.event_name == 'schedule' # Only on scheduled runs

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Update Dependencies
        run: |
          echo "Checking for testing dependency updates..."
          pnpm outdated --json > outdated.json || true

          # Update critical testing dependencies if needed
          TESTING_DEPS="vitest cypress playwright @storybook/test-runner axe-core"
          for dep in $TESTING_DEPS; do
            echo "Checking $dep..."
            # Conservative update - only patch versions
            pnpm update $dep --save-dev || true
          done

      - name: Fix Import Paths
        run: |
          echo "Checking for broken import paths in test scripts..."
          find scripts -name "*.js" -type f | while read file; do
            # Fix common import issues
            sed -i "s|'chokidar'|'chokidar'|g" $file || true
            sed -i "s|from 'fs'|from 'fs'|g" $file || true
            sed -i "s|from 'path'|from 'path'|g" $file || true
          done

      - name: Create Update PR if Changes
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: 'chore: auto-update testing infrastructure'
          title: 'üîß Auto-Update Testing Infrastructure'
          body: |
            ## Automated Testing Infrastructure Updates

            This PR contains automated updates to keep our testing infrastructure current:

            - Updated testing dependencies to latest patch versions
            - Fixed broken import paths
            - Cleaned up stale references

            **Please review the changes before merging.**

            Run `pnpm run testing:health` to verify everything is working.
          branch: auto-update/testing-infrastructure
          labels: testing, maintenance, automated
