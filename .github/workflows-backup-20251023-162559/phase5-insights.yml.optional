name: Phase 5 - AI Testing Insights

on:
  schedule:
    # Weekly insights report - Monday 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:  # Allow manual triggering
  pull_request:
    paths:
      - 'scripts/smart-test-recommendations.js'
      - 'scripts/ai-test-generator.js'
      - 'scripts/chaos-engineering-tester.js'

jobs:
  ai-testing-insights:
    runs-on: ubuntu-latest
    name: 🤖 AI Testing Insights & Recommendations

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧠 Generate AI Test Analysis
        run: |
          echo "🤖 Running AI-powered test analysis..."
          npm run ai:analyze

      - name: 💡 Generate Smart Test Recommendations
        run: |
          echo "💡 Generating comprehensive test recommendations..."
          npm run test:recommend:comprehensive

      - name: 🔮 Run Predictive Test Analysis
        run: |
          echo "🔮 Analyzing test prediction capabilities..."
          npm run test:predict:dry-run --verbose

      - name: 🌪️ Chaos Engineering Health Check
        run: |
          echo "🌪️ Running light chaos engineering health check..."
          npm run test:chaos:dry-run --intensity low

      - name: 📊 Generate Performance Insights
        run: |
          echo "📊 Analyzing test performance optimization..."
          npm run test:optimize:dry-run

      - name: 📈 Upload Test Insights Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: phase5-insights-${{ github.sha }}
          path: |
            test-recommendations-report.json
            TEST_RECOMMENDATIONS.md
            chaos-engineering-report.json
            .predictive-test-results.json
          retention-days: 30

      - name: 💬 Comment Insights Summary (PR only)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            let comment = '## 🤖 Phase 5 AI Testing Insights\n\n';

            // Add recommendations summary if file exists
            if (fs.existsSync('TEST_RECOMMENDATIONS.md')) {
              const recommendations = fs.readFileSync('TEST_RECOMMENDATIONS.md', 'utf8');
              const lines = recommendations.split('\n').slice(0, 20); // First 20 lines
              comment += '### 💡 Test Recommendations\n\n';
              comment += lines.join('\n') + '\n\n';
              comment += '<details><summary>View Full Report</summary>\n\n';
              comment += 'Download the "phase5-insights" artifact for complete analysis.\n\n';
              comment += '</details>\n\n';
            }

            // Add chaos engineering summary if file exists
            if (fs.existsSync('chaos-engineering-report.json')) {
              try {
                const chaos = JSON.parse(fs.readFileSync('chaos-engineering-report.json', 'utf8'));
                comment += '### 🌪️ Chaos Engineering\n\n';
                comment += `- **Scenarios**: ${chaos.summary?.totalScenarios || 0}\n`;
                comment += `- **Success Rate**: ${chaos.summary?.successRate || 0}%\n`;
                comment += `- **Recommendations**: ${chaos.recommendations?.length || 0}\n\n`;
              } catch (e) {
                comment += '### 🌪️ Chaos Engineering\n\nReport available in artifacts.\n\n';
              }
            }

            comment += '---\n*Generated by Phase 5 AI Testing Infrastructure*';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  chaos-resilience-validation:
    runs-on: ubuntu-latest
    name: 🌪️ Chaos Engineering Validation
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🌪️ Run Chaos Engineering Tests
        run: |
          echo "🌪️ Running chaos engineering resilience tests..."
          npm run test:chaos:low --verbose

      - name: 📊 Upload Chaos Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: chaos-engineering-results-${{ github.sha }}
          path: chaos-engineering-report.json
          retention-days: 7